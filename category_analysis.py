#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
博诺(BNR)题库分类统计脚本
"""

# robot-coding-BNR-basic.js 的分类数据
basic_categories = [
    "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人编程", "工业机器人编程", "工业机器人基础", "工业机器人基础", "工业机器人编程", "工业机器人基础", "工业机器人编程", "工业机器人基础", "工业机器人基础", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "工业机器人组成", "工业机器人编程", "博诺机器人操作", "工业机器人系统管理", "工业机器人系统管理", "工业机器人网络", "工业机器人系统管理", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "工业机器人网络", "工业机器人网络", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人基础", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "博诺机器人操作", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人基础", "工业机器人基础", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人安全", "工业机器人安全", "工业机器人基础", "工业机器人基础", "工业机器人应用", "工业机器人编程", "工业机器人编程", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人安全", "工业机器人末端执行器", "工业机器人末端执行器", "工业机器人应用", "工业机器人基础", "工业机器人末端执行器", "工业机器人末端执行器", "工业机器人末端执行器", "工业机器人末端执行器", "工业机器人操作", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人应用", "工业机器人操作", "工业机器人坐标系", "工业机器人坐标系", "博诺机器人操作", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人操作", "工业机器人编程", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "工业机器人控制", "工业机器人控制", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人操作", "工业机器人操作", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人坐标系", "工业机器人编程", "工业机器人基础", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人基础", "工业机器人基础", "工业机器人控制", "博诺机器人操作", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人操作", "工业机器人基础", "工业机器人基础", "工业机器人系统管理", "工业机器人系统管理", "工业机器人系统管理", "工业机器人系统管理", "工业机器人系统管理", "博诺机器人操作", "工业机器人系统管理", "博诺机器人操作", "工业机器人系统管理", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人安全", "工业机器人安全", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人安全", "工业机器人编程", "工业机器人编程", "工业机器人坐标系", "工业机器人安全", "工业机器人编程", "工业机器人坐标系", "博诺机器人编程", "博诺机器人操作", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人基础", "工业机器人控制", "工业机器人编程", "工业机器人编程", "工业机器人坐标系", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人基础", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "工业机器人运动", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人操作", "博诺机器人操作", "博诺机器人操作", "工业机器人坐标系", "工业机器人运动", "工业机器人坐标系", "工业机器人编程", "工业机器人控制", "工业机器人控制", "工业机器人编程", "工业机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人编程", "博诺机器人操作", "工业机器人系统管理", "工业机器人编程", "工业机器人传感器", "工业机器人传感器", "工业机器人传感器", "工业机器人编程", "工业机器人传感器", "工业机器人传感器", "工业机器人传感器", "工业机器人应用", "工业机器人基础", "工业机器人基础", "传感器技术", "传感器技术", "传感器技术", "机器人末端执行器", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "机器人控制系统", "机器人控制系统", "机器人控制系统", "机器人控制系统", "机器人控制系统", "机器人控制系统", "机器人控制系统", "机器人执行器", "机器人执行器", "机器人执行器", "机器人执行器", "传感器技术", "机器人执行器", "机器人执行器", "机器人执行器", "机器人编程", "传感器技术", "机器人控制系统", "电气控制", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "机器人传动", "机器人传动", "机器人传动", "机械原理", "传感器技术", "电机驱动", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "电机驱动", "电机驱动", "机器人传动", "机器人传动", "机器人系统", "电机驱动", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "电机驱动", "机器人传动", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "电气控制", "传感器技术", "传感器技术", "仓储物流", "仓储物流", "仓储物流", "仓储物流", "仓储物流", "仓储物流", "仓储物流", "仓储物流", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "传感器技术", "机器人编程", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电气控制", "电机驱动", "电机驱动", "电机驱动", "机器人控制系统", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "电机驱动", "机器人编程", "机器人编程", "机器人结构", "机器人结构", "机器人应用", "电机驱动", "电机驱动", "机器人结构", "机器人应用", "机械原理", "传感器技术", "机器人控制系统", "机器人系统", "机器人系统", "机器人系统", "机器人系统", "机器人驱动", "机器人编程", "机器人控制系统", "机器人编程", "电机驱动", "机器人执行器", "机器人执行器", "机器人应用", "机器人应用", "机器人系统", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人系统", "机器人控制", "机器人结构", "机器人应用", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "气动系统", "设备维护", "电气安全", "设备维护", "电气安全", "动力系统", "职业道德", "职业道德", "职业道德", "电气安全", "电气安全", "电气安全", "电气安全", "电气控制", "电气控制", "气动系统", "电气基础", "电气基础", "电气控制", "电气基础", "电气基础", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业道德", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "安全操作", "安全操作", "安全操作", "示教编程", "人机交互", "系统管理", "网络配置", "人机交互", "安全操作", "工具坐标系", "坐标变换", "坐标系", "坐标系", "坐标系", "工具坐标系", "工件坐标系", "机器人学基础", "坐标系", "工件坐标系", "工件坐标系", "工件坐标系", "工件坐标系", "安全操作", "安全操作", "维护保养", "维护保养", "机器人学基础", "坐标系标定", "程序编辑", "程序管理", "程序编辑", "程序运行", "程序验证", "程序编辑", "示教编程", "示教编程", "示教编程", "系统备份", "系统管理", "系统恢复", "文件管理", "系统备份", "程序点属性", "示教编程", "工具坐标系", "编程方式", "示教编程", "示教编程", "安全操作", "编程指令", "机器人结构", "插补方式", "插补运算", "零点标定", "运动指令", "运动类型", "运动类型", "轨迹编程", "人机交互", "系统日志", "机器人运动学", "传感器", "机器人定义", "机器人自由度", "机器人结构", "工作范围", "传动系统", "机器人结构", "信号类型", "信号类型", "信号类型", "机器人关节", "电气基础", "传感器", "传感器", "电气安全", "电气安全", "驱动系统", "传动系统", "传动系统", "传感器", "I/O系统", "传动系统", "编码器", "传感器", "传感器", "机械结构", "仓储物流", "传感器", "驱动系统", "传感器", "控制系统", "机器人分类", "机器人结构", "末端执行器", "末端执行器", "坐标系", "末端执行器", "机器人结构", "力控技术", "工具坐标系", "零点标定", "机器人参数", "装配机器人", "涂胶工艺", "码垛机器人", "教育学", "学校安全", "学校安全", "学校安全", "应急处理", "安全意识", "应急预案", "应急演练", "职业素养", "职业素养", "职业道德", "人际交往"
]

# robot-coding-BNR-mid.js 的分类数据
mid_categories = [
    "机器人学基础", "机器人编程", "机器人编程", "机器人编程", "焊接工艺", "机器人应用", "机器人仿真", "机器人仿真", "机器人操作", "机器人操作", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人操作", "机器人操作", "机器人安全", "机器人编程", "机器人仿真", "机器人仿真", "机器人仿真", "建模基础", "建模基础", "建模基础", "建模基础", "建模基础", "机器人工具", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人监控", "机器人监控", "机器人应用", "机器人监控", "机器人仿真", "机器人仿真", "机器人仿真", "机器人运动学", "机器人仿真", "机器人仿真", "机器人传感器", "机器人控制", "机器人运动学", "机器人仿真", "机器人仿真", "机器人结构", "机器人运动学", "机器人结构", "机器人结构", "机器人应用", "机器人传感器", "机器人I/O", "机器人I/O", "机器人I/O", "机器人应用", "机器人编程", "机器人运动学", "机器人运动学", "机器人应用", "机器人I/O", "机器人编程", "机器人编程", "机器人结构", "机器人结构", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人结构", "机器人结构", "机器人结构", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人编程", "机器人结构", "机器人编程", "机器人测试", "机器人测试", "机器人结构", "机器人技术参数", "机器人技术参数", "机器人技术参数", "机器人技术参数", "机器人技术参数", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机器人操作", "机器人结构", "机器人结构", "机器人坐标系", "机器人编程", "机器人编程", "机器人运动学", "机器人传感器", "机器人操作", "机器人操作", "机器人操作", "机器人技术参数", "机器人精度", "机器人精度", "机器人传感器", "机器人结构", "机器人结构", "机器人结构", "机器人运动学", "机器人运动学", "机器人技术参数", "机器人编程", "机器人编程", "机器人技术参数", "机器人技术参数", "机器人结构", "机器人技术参数", "机器人运动学", "机器人编程", "机器人技术参数", "机器人技术参数", "机器人精度", "机器人控制", "机器人技术参数", "机器人技术参数", "机器人技术参数", "机器人精度", "机器人技术参数", "机器人运动学", "机器人技术参数", "机器人控制", "机器人应用", "机器人末端执行器", "机器人运动学", "机器人结构", "机器人结构", "机器人坐标系", "机器人运动学", "机器人技术参数", "机器人测试", "机器人测试", "机器人测试", "安全管理", "企业管理", "企业管理", "安全管理", "安全管理", "安全管理", "安全管理", "安全管理", "安全管理", "安全管理", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "职业素养", "工业机器人基础", "工业机器人通信", "工业机器人通信", "工业机器人通信", "工业机器人通信", "博诺机器人", "工业机器人安全", "工业机器人运动学", "工业机器人运动学", "工业机器人运动学", "工业机器人操作", "工业机器人操作", "工业机器人操作", "工业机器人操作", "工业机器人操作", "工业机器人操作", "工业机器人操作", "博诺机器人", "工业机器人操作", "工业机器人工具", "工业机器人操作", "工业机器人安全", "工业机器人安全", "工业机器人标定", "工业机器人安全", "工业机器人外围设备", "工业机器人外围设备", "喷涂机器人", "喷涂机器人", "喷涂机器人", "喷涂机器人", "喷涂机器人", "打磨机器人", "工业机器人应用", "码垛机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "装配机器人", "装配机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "焊接机器人", "工业机器人基础", "工业机器人通信", "博诺机器人", "博诺机器人", "博诺机器人", "博诺机器人", "博诺机器人", "博诺机器人", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人编程", "工业机器人通信", "工业机器人通信", "工业机器人编程", "机器视觉", "机器视觉", "工业机器人运动控制", "RFID技术", "RFID技术", "RFID技术", "智能仓储", "智能仓储", "智能仓储", "智能仓储", "工业机器人通信", "工业机器人通信", "工业机器人末端执行器", "焊接机器人", "喷涂机器人", "焊接机器人", "码垛机器人", "工业机器人运动", "喷涂机器人", "焊接机器人", "焊接机器人", "喷涂机器人", "雕刻机器人", "打磨机器人", "涂胶机器人", "焊接机器人", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人仿真", "机器人编程", "机器人仿真", "机器人仿真", "机器人编程", "机器人测试", "机器人测试", "工业机器人基础", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机器人测试", "机械原理", "机械原理", "工业机器人坐标系", "机器人编程", "机械原理", "机械原理", "工业机器人坐标系", "工业机器人精度", "工业机器人精度", "工业机器人运动学", "机器人编程", "工业机器人精度", "工业机器人运动学", "机器人测试", "机器人测试", "机器人测试", "机器人仿真", "工业机器人运动", "机器人测试", "机器人测试", "机器人测试", "职业素养", "职业素养", "职业素养", "职业素养"
]

def count_categories(categories, file_name):
    """统计分类数量"""
    category_count = {}
    for category in categories:
        if category in category_count:
            category_count[category] += 1
        else:
            category_count[category] = 1
    
    print(f"\n{'='*50}")
    print(f"{file_name} 分类统计")
    print(f"{'='*50}")
    print(f"总题目数量: {len(categories)}")
    print(f"分类数量: {len(category_count)}")
    print("\n分类详情:")
    
    # 按题目数量从多到少排序
    sorted_categories = sorted(category_count.items(), key=lambda x: x[1], reverse=True)
    
    for i, (category, count) in enumerate(sorted_categories, 1):
        print(f"{i:2d}. {category:<20} : {count:3d} 题")
    
    return category_count

def compare_categories(basic_count, mid_count):
    """对比两个文件的分类差异"""
    print(f"\n{'='*50}")
    print("分类对比分析")
    print(f"{'='*50}")
    
    # 获取所有分类
    all_categories = set(basic_count.keys()) | set(mid_count.keys())
    basic_only = set(basic_count.keys()) - set(mid_count.keys())
    mid_only = set(mid_count.keys()) - set(basic_count.keys())
    common = set(basic_count.keys()) & set(mid_count.keys())
    
    print(f"总分类数量: {len(all_categories)}")
    print(f"仅在基础题库: {len(basic_only)} 个分类")
    print(f"仅在中级题库: {len(mid_only)} 个分类")
    print(f"两个题库共有: {len(common)} 个分类")
    
    if basic_only:
        print(f"\n仅在 robot-coding-BNR-basic.js 中的分类:")
        for category in sorted(basic_only):
            print(f"  • {category} ({basic_count[category]} 题)")
    
    if mid_only:
        print(f"\n仅在 robot-coding-BNR-mid.js 中的分类:")
        for category in sorted(mid_only):
            print(f"  • {category} ({mid_count[category]} 题)")
    
    if common:
        print(f"\n两个题库共有分类对比:")
        print(f"{'分类':<25} {'基础题库':<10} {'中级题库':<10} {'合计':<10}")
        print("-" * 55)
        
        common_sorted = sorted(common, key=lambda x: basic_count[x] + mid_count.get(x, 0), reverse=True)
        for category in common_sorted:
            basic_num = basic_count[category]
            mid_num = mid_count.get(category, 0)
            total = basic_num + mid_num
            print(f"{category:<25} {basic_num:<10} {mid_num:<10} {total:<10}")

def generate_full_category_list(basic_count, mid_count):
    """生成完整的分类清单"""
    print(f"\n{'='*50}")
    print("完整分类清单")
    print(f"{'='*50}")
    
    all_categories = {}
    
    # 合并两个字典
    for category, count in basic_count.items():
        all_categories[category] = all_categories.get(category, 0) + count
    
    for category, count in mid_count.items():
        all_categories[category] = all_categories.get(category, 0) + count
    
    # 按题目总数排序
    sorted_all = sorted(all_categories.items(), key=lambda x: x[1], reverse=True)
    
    print(f"全部分类数量: {len(all_categories)}")
    print(f"全部题目总数: {sum(all_categories.values())}")
    print("\n完整分类列表 (按题目总数排序):")
    print(f"{'序号':<4} {'分类名称':<25} {'题目数量':<8} {'基础题库':<8} {'中级题库':<8}")
    print("-" * 65)
    
    for i, (category, total_count) in enumerate(sorted_all, 1):
        basic_num = basic_count.get(category, 0)
        mid_num = mid_count.get(category, 0)
        print(f"{i:<4} {category:<25} {total_count:<8} {basic_num:<8} {mid_num:<8}")

def main():
    """主函数"""
    print("博诺(BNR)题库分类统计分析")
    print("分析文件:")
    print("1. C:\\Users\\banan\\OneDrive\\桌面\\project\\src\\questionBanks\\robot-coding-BNR-basic.js")
    print("2. C:\\Users\\banan\\OneDrive\\桌面\\project\\src\\questionBanks\\robot-coding-BNR-mid.js")
    
    # 统计各自的分类
    basic_count = count_categories(basic_categories, "robot-coding-BNR-basic.js")
    mid_count = count_categories(mid_categories, "robot-coding-BNR-mid.js")
    
    # 对比分析
    compare_categories(basic_count, mid_count)
    
    # 生成完整清单
    generate_full_category_list(basic_count, mid_count)

if __name__ == "__main__":
    main()